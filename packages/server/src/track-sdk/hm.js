!function(e){"use strict";const t=e=>{window.addEventListener("load",(function(){new PerformanceObserver((t=>{const o=t.getEntriesByType("navigation")[0];if(o instanceof PerformanceNavigationTiming){const t=o;let n=0;n=t.startTime;const s=[{key:"Redirect",desc:"网页重定向的耗时",value:t.redirectEnd-t.redirectStart},{key:"AppCache",desc:"检查本地缓存的耗时",value:t.domainLookupStart-t.fetchStart},{key:"DNS",desc:"DNS查询的耗时",value:t.domainLookupEnd-t.domainLookupStart},{key:"TCP",desc:"TCP连接的耗时",value:t.connectEnd-t.connectStart},{key:"Waiting(TTFB)",desc:"从客户端发起请求到接收到响应的时间 / Time To First Byte",value:t.responseStart-t.requestStart},{key:"Content Download",desc:"下载服务端返回数据的时间",value:t.responseEnd-t.responseStart},{key:"HTTP Total Time",desc:"http请求总耗时",value:t.responseEnd-t.requestStart},{key:"DOMContentLoaded",desc:"dom加载完成的时间",value:t.domContentLoadedEventEnd-n},{key:"Loaded",desc:"页面load的总耗时",value:t.loadEventEnd-n}];if(Math.random()>.75){const o=window.location,s=o.href,r=o.pathname,a=navigator.userAgent,i=s.split("?")[0];e.post(`${e.BASE_URL}/data`,{app:"shakespeare-performance",url:i,ua:a,path:r,stats_ttfb:t.responseStart-t.requestStart,stats_domLoaded:t.domContentLoadedEventEnd-n,stats_loaded:t.loadEventEnd-n})}console&&console.log&&console.log(s)}})).observe({entryTypes:["navigation"]})}))},o=e=>{window.addEventListener("error",(t=>{const o=t.target,n=o.getAttribute("src"),s=o.getAttribute("href"),r=n||s;console.log("出错了",t),r?e.post("/error/asset",{type:"resource",message:`${r} is load error`,reason:t.message}):e.post("/error/simple",{type:"resource",message:t.message})}),!0),window.addEventListener("unhandledrejection",(t=>{console.log("异步错误",t.reason),e.post("/error/async",{type:"unhandledrejection",message:t.reason})}),!0)},n=e=>{const t=history[e];return function(...o){const n=t.aplly(this,o),s=new Event(e);return window.dispatchEvent(s),n}},s=e=>{window.addEventListener("hashchange",(t=>{const o=t.newURL,n=t.oldURL;e.post("/route/hashchange",{type:"hashchange",newUrl:o,oldUrl:n})})),window.trackerHistory=()=>{window.history.pushState=n("pushState"),window.history.replaceState=n("replaceState");["pushState","replaceState","popstate"].forEach((t=>{window.addEventListener(t,(o=>{const n=window.location.href;e.post("/route/change",{type:t,newUrl:n})}))}))}};class r{constructor(e){this.BASE_URL=e.requestURL,this.id=e.id,this.plugins=e.plugins??[],this.init()}init(){this.plugins?.some((e=>e(this)))}post(e,t){return new Promise((()=>{}))}}(async()=>{const e=(e=>e.split("?")[1])(document.querySelectorAll("script")[0].src);if(void 0===e)console.error("无id");else{const n="http://localhost:4000",a=await fetch(`${n}/site/${e}`);switch((await a.json()).code){case 404:console.error("错误的id");break;case 403:console.error("该id与注册网址不符合");break;case 200:console.log("启用埋点"),window.tracker=new r({id:e,requestURL:n,plugins:[t,o,s]})}}})(),e.Tracker=r}({});
